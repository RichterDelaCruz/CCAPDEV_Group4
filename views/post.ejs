<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="stylesheet" href="/css/homepage.css">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

  <title>Post</title>
</head>

<body>

  <nav>
    <a href="/homepage"><img src="/images/logo.png"></a>

    <ul class="nav-menu">
      <li><a href="/homepage"><button class="homebutton">Homepage</button></a></li>
      <li><a href="/users"><button class="homebutton">Search Users</button></a></li>
      <li><a href="/login"><button class="homebutton">Log out</button></a></li>
      </h1>
    </ul>
  </nav>

  <!--<h1>Post Details</h1>-->
  
  <div class="post-detail-container">
    <div class="post-image-container">
      <!-- Display the post image -->
      <% if (post.photo) { %>
        <img src="<%= post.photo %>" alt="Post Photo" style="max-width: 100%;">
        <% } else { %>
          <p>No photo for this post.</p>
          <% } %>
    </div>
    <div class="user-info-like-container">
      <!-- User Info Container -->
      <div class="user-info-container">
        <!-- Display user profile picture, username, and timestamp -->
        <div class="profile-pic">
              <img src="<%= post.user_id.profilePicture %>" alt="Profile Picture">
      </div> 
      <div>
        <span href = "/profile/" + <%= post.user_id %>><%= post.user_id.username %></span>
        <div class="timestamp"><%= new Date(post.timestamp).toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' }) %></div>
    </div>

    </div>
      <!-- Like button and Like count -->
      <div class="like-container">
        <p>
          <span id="likesCount">
            <%= post.likes.length %>
          </span>
          <i class="fas fa-thumbs-up fa-2x" id="likeButton" onclick="toggleLike('<%= post._id %>')"></i>
        </p>
      </div>
      <!-- Comment form -->
      <form method="POST" action="/add-comment">
        <!-- Hidden input to store the post ID -->
        <input type="hidden" name="post_id" value="<%= post._id %>">
        <input type="text" name="content" id="content" style="width: 93%;">
        <div class="button-wrapper"><input type="submit" value="Post Comment" class="submit-button"></div>

      </form>
      <div class="comments-section">
        <!-- Display comments for this post if available -->
        <% if (post.comments && post.comments.length> 0) { %>
          <% post.comments.forEach((comment)=> { %>
            <div class="comment">
              <div class="comment-profile-pic">
                <img src="<%= comment.user_id.profilePicture%>" alt="Commenter Profile Picture"
                  style="max-width: 100px;">
              </div>
              <div class="comment-content">
                <p>
                  <strong>
                    <%= comment.username %>
                  </strong>
                  <time>
                    <%= new Date(post.timestamp).toLocaleDateString(undefined, { year: 'numeric' , month: 'short' ,
                      day: 'numeric' }) %>
                  </time>
                  <% if (currentUser._id.toString() === comment.user_id._id.toString()) { %>
                    <button class="garbage-button" onclick="logCommentId('<%= comment._id %>')">
                      <i class="fas fa-trash"></i>
                    </button>
                  <% } %>
                </p>


                <%= comment.content %>
              </div>
              <% if (currentUser._id.toString() === comment.user_id._id.toString()) { %>
                <div class="delete-container">
                  <button onclick="deleteComment('<%= comment._id %>')">
                    <i class="fas fa-trash"></i> <!-- Font Awesome trash icon -->
                  </button>
                </div>
              <% } %>
            </div>
            <% }); %>
              <% } else { %>
                <p>No comments for this post.</p>
                <% } %>
      </div>
    </div>
    <!-- Comments section -->

  </div>
  <script>
    function deleteComment(commentId) {
    // Make a DELETE request to the server to delete the comment
    fetch(`/comment/${commentId}`, {
      method: 'DELETE',
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          // If the comment was successfully deleted, remove the comment element from the DOM
          const commentElement = document.getElementById(`comment_${commentId}`);
          commentElement.remove();
        } else {
          // Handle the case where the comment could not be deleted
          console.error('Error deleting comment:', data.error);
        }
      })
      .catch((error) => {
        console.error('Error deleting comment:', error);
      });
  }
    document.addEventListener('DOMContentLoaded', () => {
      // Get the post ID
      const postId = '<%= post._id %>';
      // Get the like status from local storage (if it exists)
      const isLiked = localStorage.getItem(`liked_${postId}`);
      // Update the like button to just display the thumbs-up icon without any text
      const likeButton = document.getElementById('likeButton');
      likeButton.classList.toggle('liked', isLiked === 'true');
    });

    function toggleLike(postId) {
      // Fetch the current like count
      const likesCountElement = document.getElementById('likesCount');
      const currentLikes = parseInt(likesCountElement.innerText);
      // Make a POST request to the server to toggle the like
      fetch('/toggle-like', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ postId }),
      })
        .then((response) => response.json())
        .then((data) => {
          // Update the like count on the page
          likesCountElement.innerText = data.likesCount;
          // Update the like status in local storage
          localStorage.setItem(`liked_${postId}`, data.isLiked);
          // Toggle the class for the liked status
          const likeButton = document.getElementById('likeButton');
          likeButton.classList.toggle('liked', data.isLiked);
        })
        .catch((error) => {
          console.error('Error toggling like:', error);
        });
    }

    function logCommentId(commentId) {
    console.log('Clicked garbage button for comment:', commentId);
    // Send a DELETE request to the server to delete the comment
    fetch(`/comments/${commentId}`, {
      method: 'DELETE'
    })
      .then((response) => {
        // Check the response status to see if the comment was successfully deleted
        if (response.ok) {
          location.reload();
          console.log(`Comment with ID ${commentId} deleted successfully.`);
          // Optionally, you can remove the deleted comment element from the page if needed
        } else {
          console.error(`Error deleting comment with ID ${commentId}.`);
        }
      })
      .catch((error) => {
        console.error('Error deleting comment:', error);
      });
  }
  </script>
</body>

</html>